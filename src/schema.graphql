scalar Date
scalar DateTime

type Query {
  getAllPAFTypes: [PAF_types]
  getAllPAFs: [PAF]
  getAllEmployees(
    skip: Int
    take: Int
    where: e_employeeWhereInput
  ): [E_employee]
  getEmployee(id: ID!): E_employee
}

type Mutation {
  createPAF(data: createPAFInput): PAF
}

type PAF {
  id_PAF: ID!
  PAFType: PAF_types!
  status: Int
  date_effective: Date
  id_registry: Int
  id_employee: Int
  id_creator: Int
  id_creator_pers: Int
  id_editor: Int
  id_editor_pers: Int
  date_created: Date
  date_modified: Date
  date_authorized: Date
  dt_created: DateTime
  dt_modified: DateTime
}

type PAF_types {
  id_PAFType: ID
  PAFType: String
  PAFType_slug: String
  is_active: Boolean
  is_visible: Boolean
  order: Int
  paf: [PAF]
}

type E_employee {
  id_employee: ID
  id_registry: Int
  id_position: Int
  id_organizationGroupRegion: Int
  firstName: String
  middleName: String
  lastName: String
  secondLastName: String
  shortName: String
  fullName: String
  nickname: String
  RFC: String
  CURP: String
  IMSS: String
  civilStatus: String
  nationality: String
  phone: String
  birthday: Date
  id_gender: Int
  bloodtype: String
  is_rehired: Boolean
  date_rehired: Date
  is_referred: Boolean
  date_referred: Date
  id_referredBy: Int
  is_rep: Boolean
  is_trainee: Boolean
  is_newbie: Boolean
  is_manager: Boolean
  is_readyToTransfer: Boolean
  is_propensityToLeave: Boolean
  date_hire: Date
  date_lwd: Date
  id_site: Int
  weeklyHours: Int
  id_paytype: Int
  id_outsource: Int
  id_firstGeneration: Int
  id_currentGeneration: Int
  id_lob: Int
  id_department: Int
  id_area: Int
  id_group: Int
  id_supervisor: Int
  id_qa_supervisor: Int
  id_ods: Int
  id_coach_support: Int
  id_creator: Int
  id_creator_pers: Int
  id_editor: Int
  id_editor_pers: Int
  date_created: Date
  date_modified: Date
  is_active: Boolean
  path_image: String
  mail: String
  cellphone: String
  zip_code: String
  address: String
  state: String
  country: String
  city: String
  id_organization: Int
  id_organizationGroup: Int
  id_hierarchy: Int
  id_unit: Int
  id_unit_paf: Int
}

input createPAFInput {
  id_PAFType: Int!
  status: Int
  date_effective: String
  id_registry: Int
  id_employee: Int
  id_creator: Int
  id_creator_pers: Int
}

input e_employeeWhereInput {
  shortName: StringFilterInput
  id_supervisor: Int
}

input StringFilterInput {
  equals: String
  in: [String]
  notIn: [String]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: String
}
